/****************************************Copyright (c)************************************************************
**                              
**                                 
**                                  
**--------------文件信息------------------------------------------------------------------------------------------
**文   件   名: UsbInclude.h
**创   建   人: 杨承凯
**创 建 日  期: 2008年04月17日
**最后修改日期: 2008年04月17日
**描        述: USB公共头文件
**系统资源说明: 使用了两个信号量
*****************************************************************************************************************/
#ifndef _USB_INCLUDE_H_
#define _USB_INCLUDE_H_

//==================================================================================================================
//
//用户请根据需要设置下面的宏参数
//
//==================================================================================================================

//编译控制==========================================================================================================
#define _USB0_DEVICE_RECV_			//接收使能
#define _USB0_DEVICE_SEND_			//发送使能

//宏常量============================================================================================================
//以下两个宏常量，请在上位机程序中设置为相同的值，否则有点风险
#define  EP1_PACKET_SIZE         	0x0040      //端点1数据区长度，用于发送数据到主机(最大128字节)
#define  EP2_PACKET_SIZE         	0x0040      //端点2数据区长度，用于从主机接收数据(最大256字节)


//当USB采用中断模式传输时，请设置下面的中断扫描时间，单位为ms
#define USB_INTURRUPT_SCAN_TIME		10



//宏编译控制========================================================================================================
//请使能以下三个宏中的其中一个宏，以选择传输模式
#define USB_TYPE_USE_INTURRUPT_BASE	  			//采用基本的中断传输
//#define USB_TYPE_USE_BULK_BASE				//采用基本的块传输
//#define USB_EP_TRANS_MASS_STORAGE				//用于Mass storage设备的传输


//是否使用USB内存缓冲方式(如果不使用，注释掉这个宏)
//注：如果使用了缓冲方式对OS用户程序无严格要求，不会引起USB通信失败，但通信效率会降低；
//	  如果不使用缓冲方式则要求OS用户程序即使响应USB读写操作，否则会导致通信失败，在这种方式下，通信效率较高
#define USB_USE_MEM_BUFFERD




//==================================================================================================================
//
//后面的内容请用户不要更改，否则有风险
//
//==================================================================================================================

//宏常量
#define  EP0_PACKET_SIZE         			0x40        //端点0数据区长度，用于收发配置数据

//基本中断传输方式
#ifdef USB_TYPE_USE_INTURRUPT_BASE
#define USB_PRODUCT_CLASS_TYPE				0x0508
#define USB_EP_TRANS_TYPE					0x03
#define USB_INTERFACE_TRANS_TYPE			0x00
#define USB_INTERFACE_TRANS_SUB_TYPE		0x00
#define USB_INTERFACE_TRANS_PROTACAL		0x00
#define USB_EP_SCAN_TIME					USB_INTURRUPT_SCAN_TIME
#endif

//基本批量传输方式
#ifdef USB_TYPE_USE_BULK_BASE
#define USB_PRODUCT_CLASS_TYPE				0x0508
#define USB_EP_TRANS_TYPE					0x02
#define USB_INTERFACE_TRANS_TYPE			0x00
#define USB_INTERFACE_TRANS_SUB_TYPE		0x00
#define USB_INTERFACE_TRANS_PROTACAL		0x00
#define USB_EP_SCAN_TIME					0
#endif

//用于大容量存储设备
#ifdef USB_EP_TRANS_MASS_STORAGE
#define USB_PRODUCT_CLASS_TYPE				0x0002
#define USB_EP_TRANS_TYPE					0x02
#define USB_INTERFACE_TRANS_TYPE			0x08
#define USB_INTERFACE_TRANS_SUB_TYPE		0x06
#define USB_INTERFACE_TRANS_PROTACAL		0x50
#define USB_EP_SCAN_TIME					0
#endif

//宏操作============================================================================================================
#define SWAP_WORD(x)	((x)>>8)|((x)<<8)


//数据定义==========================================================================================================
extern unsigned char xdata UsbOutBuffer[EP2_PACKET_SIZE];
extern unsigned char xdata UsbInBuffer[EP1_PACKET_SIZE];


//函数声明==========================================================================================================
/*****************************************************************************************************************
* 名	称：Usb0Init()
* 功	能：USB0初始化函数
* 入口参数：无
* 出口参数：无
* 说	明：无
*****************************************************************************************************************/
void Usb0Init(void) reentrant;

/*****************************************************************************************************************
* 名	称：Usb0Open()
* 功	能：开启USB0
* 入口参数：无
* 出口参数：无
* 说	明：要在启动任务的一开始调用，否则无法及时回复主机的连接信号
*****************************************************************************************************************/
void Usb0Open() reentrant;

/*****************************************************************************************************************
* 名	称：Usb0ViriInit()
* 功	能：USB0变量初始化函数
* 入口参数：无
* 出口参数：无
* 说	明：无
*****************************************************************************************************************/
void Usb0VariInit(void) reentrant;

/*****************************************************************************************************************
* 名	称：Usb0DeviceRecv()
* 功	能：USB0设备端接收函数
* 入口参数：pBuff - 数据区指针，nLen - 需要接收的数据个数，nTimeOut - 接收超时时间
* 出口参数：实际接收到的数据个数
* 说	明：无
*****************************************************************************************************************/
int Usb0DeviceRecv(char* pBuff, int nLen, unsigned int nTimeOut) reentrant;

/*****************************************************************************************************************
* 名	称：Usb0DeviceSend()
* 功	能：USB0设备端接收函数
* 入口参数：pBuff - 数据区指针，nLen - 需要发送的数据个数，nTimeOut - 发送超时时间
* 出口参数：实际发送的数据个数
* 说	明：无
*****************************************************************************************************************/
int Usb0DeviceSend(char* pBuff, int nLen, unsigned int nTimeOut) reentrant;



#endif	//_USB_INCLUDE_H_

